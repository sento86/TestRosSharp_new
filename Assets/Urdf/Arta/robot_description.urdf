<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/idf/ros/unity_ws/src/arta/arta_description/urdf/arta.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="arta" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <gazebo reference="chassis">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="back">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="seat">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="right_caster_wheel">
    <mu1>0</mu1>
    <mu2>0</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="left_caster_wheel">
    <mu1>0</mu1>
    <mu2>0</mu2>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Provide access to the joints of the wheels -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo reference="laser">
    <sensor name="head_hokuyo_sensor" type="gpu_ray">
      <visualize>true</visualize>
      <update_rate>20.0</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.141592</min_angle>
            <max_angle>3.141592</max_angle>
          </horizontal>
        </scan>
        <!-- Hokuyo URG-04LX detectable range is 20mm to 5600mm and 1.0mm linear resolution -->
        <range>
          <min>0.02</min>
          <max>5.6</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo">
        <topicName>arta/base_scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  Adding a Hokuyo scanner
  
  
  <gazebo reference="imu">
    <sensor name="imu_sensor" type="imu">
      <visualize>false</visualize>
      <update_rate>20.0</update_rate>
      <always_on>true</always_on>
      <!-- Model a noisy IMU via disturbances to the angular rates and linear acceleration readings -->
      <!--imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu-->
      <plugin filename="libgazebo_ros_imu_sensor.so" name="gazebo_ros_imu">
        <bodyName>imu</bodyName>
        <frameName>imu</frameName>
        <topicName>arta/imu</topicName>
        <!-- Keep this zero, update_rate in the parent <sensor> tag will control the frame rate -->
        <updateRateHZ>0.0</updateRateHZ>
        <gaussianNoise>0.01</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
      </plugin>
    </sensor>
  </gazebo>
  Adding an IMU sensor
  
  
  <gazebo reference="camera_link">
    <sensor name="camera" type="depth">
      <visualize>false</visualize>
      <update_rate>20.0</update_rate>
      <always_on>true</always_on>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>
        </depth_camera>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
        <noise>
          <!-- Noise is sampled independently per pixel on each frame.
          That pixel's noise value is added to each of its color
          channels, which at that point lie in the range [0,1]. -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="gazebo_ros_kinect_camera">
        <!-- Keep this zero, update_rate in the parent <sensor> tag will control the frame rate -->
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>/camera/rgb/image_rect_color</imageTopicName>
        <cameraInfoTopicName>/camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth_registered/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera/depth_registered/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/camera/depth_registered/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
        <baseline>0.1</baseline>
        <pointCloudCutoff>0.4</pointCloudCutoff>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  Adding a Kinect depth camera

  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- Physics engine doesn't accept a base_link with inertia, so put a joint with a simple link -->
  <link name="base_link"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  <link name="chassis">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.55 0.55 0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <geometry>
        <box size="0.55 0.55 0.15"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <mass value="30"/>
      <inertia ixx="0.8125" ixy="0" ixz="0" iyy="0.8125" iyz="0" izz="0.8125"/>
    </inertial>
  </link>
  <!-- Chair properties of ARTA -->
  <joint name="base_to_seat" type="fixed">
    <parent link="chassis"/>
    <child link="seat"/>
  </joint>
  <link name="seat">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.35"/>
      <geometry>
        <box size="0.5 0.5 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.35"/>
      <geometry>
        <box size="0.5 0.5 0.1"/>
      </geometry>
      <material name="black"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.35"/>
      <mass value="10"/>
      <inertia ixx="0.216666666667" ixy="0" ixz="0" iyy="0.216666666667" iyz="0" izz="0.216666666667"/>
    </inertial>
  </link>
  <joint name="back_to_seat" type="fixed">
    <parent link="seat"/>
    <child link="back"/>
  </joint>
  <link name="back">
    <collision>
      <origin rpy="0 0 1.57079632679" xyz="-0.25 0 0.575"/>
      <geometry>
        <box size="0.4 0.08 0.45"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 1.57079632679" xyz="-0.25 0 0.575"/>
      <geometry>
        <box size="0.4 0.08 0.45"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 1.57079632679" xyz="-0.25 0 0.575"/>
      <mass value="5"/>
      <inertia ixx="0.0870416666667" ixy="0" ixz="0" iyy="0.151041666667" iyz="0" izz="0.151041666667"/>
    </inertial>
  </link>
  <!-- Caster Wheels -->
  <joint name="front_right_caster" type="fixed">
    <parent link="chassis"/>
    <child link="right_caster_wheel"/>
    <dynamics damping="0.0" friction="0.5"/>
  </joint>
  <link name="right_caster_wheel">
    <collision>
      <origin rpy="0 0 0" xyz="0.325 -0.275 0.08"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0.325 -0.275 0.08"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.325 -0.275 0.08"/>
      <mass value="2"/>
      <inertia ixx="0.00512" ixy="0" ixz="0" iyy="0.00512" iyz="0" izz="0.00512"/>
    </inertial>
  </link>
  <joint name="front_left_caster" type="fixed">
    <parent link="chassis"/>
    <child link="left_caster_wheel"/>
    <dynamics damping="0.0" friction="0.5"/>
  </joint>
  <link name="left_caster_wheel">
    <collision>
      <origin rpy="0 0 0" xyz="0.325 0.275 0.08"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0.325 0.275 0.08"/>
      <geometry>
        <sphere radius="0.08"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.325 0.275 0.08"/>
      <mass value="2"/>
      <inertia ixx="0.00512" ixy="0" ixz="0" iyy="0.00512" iyz="0" izz="0.00512"/>
    </inertial>
  </link>
  <link name="left_wheel">
    <collision>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.0322916666667" ixy="0" ixz="0" iyy="0.0322916666667" iyz="0" izz="0.05625"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Continuous joint for rotation about a single axis -->
  <joint name="left_wheel_hinge" type="continuous">
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="-0.1 0.275 0.15"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!-- Transmission element used to allow use of ros_control with ARTA; links actuators with joints -->
  <transmission name="left_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_hinge">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_wheel">
    <collision>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <inertial>
      <origin rpy="0 1.57079632679 1.57079632679" xyz="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.0322916666667" ixy="0" ixz="0" iyy="0.0322916666667" iyz="0" izz="0.05625"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <mu1 value="100.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Continuous joint for rotation about a single axis -->
  <joint name="right_wheel_hinge" type="continuous">
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="-0.1 -0.275 0.15"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!-- Transmission element used to allow use of ros_control with ARTA; links actuators with joints -->
  <transmission name="right_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_hinge">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Fixed joint to prevent movement -->
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.35"/>
    <parent link="chassis"/>
    <child link="laser"/>
  </joint>
  <!-- Add a hokuyo scanner directly on top of the seat -->
  <link name="laser">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://arta_description/meshes/hokuyo.dae"/>
      </geometry>
    </collision>
    <visual name="visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://arta_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.00333333333333" ixy="0" ixz="0" iyy="0.00333333333333" iyz="0" izz="0.00333333333333"/>
    </inertial>
  </link>
  <!-- IMU sensor placed in between the seat and the base -->
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.225"/>
    <parent link="chassis"/>
    <child link="imu"/>
  </joint>
  <link name="imu">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    <visual name="visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="4.16666666667e-05" ixy="0" ixz="0" iyy="4.16666666667e-05" iyz="0" izz="4.16666666667e-05"/>
    </inertial>
  </link>
  <!-- Hover depth camera above front caster wheels -->
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.17 0 0.85"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://arta_description/meshes/kinect.dae"/>
      </geometry>
    </collision>
    <visual name="visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://arta_description/meshes/kinect.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.00333333333333" ixy="0" ixz="0" iyy="0.00333333333333" iyz="0" izz="0.00333333333333"/>
    </inertial>
  </link>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>
  <!-- For Gazebo simulation we need these frames also pubished (normally handled by OpenNI launch/driver -->
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
</robot>

